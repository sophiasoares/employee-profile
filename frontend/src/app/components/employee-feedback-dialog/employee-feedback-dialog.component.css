.dialog-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: var(--spacing-base);
}

.dialog-container {
  background: var(--background-color);
  border-radius: var(--border-radius);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  max-width: 900px;
  width: 100%;
  max-height: 90vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.dialog-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-lg);
  border-bottom: var(--border-width) solid var(--border-color);
  background: var(--header-background);
}

.dialog-header h2 {
  margin: 0;
  color: var(--text-primary);
  font-size: var(--font-size-xl);
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.close-button {
  background: none;
  border: none;
  font-size: var(--font-size-lg);
  color: var(--text-secondary);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--border-radius);
  transition: all 0.2s ease;
}

.close-button:hover {
  background: var(--hover-background);
  color: var(--text-primary);
}

.dialog-content {
  padding: var(--spacing-lg);
  overflow-y: auto;
  flex: 1;
}

.loading-state {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-xl);
  color: var(--text-secondary);
}

.error-message {
  background: var(--error-background);
  color: var(--error-color);
  padding: var(--spacing-base);
  border-radius: var(--border-radius);
  margin-bottom: var(--spacing-lg);
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  border: var(--border-width) solid var(--error-border);
}

.feedback-section {
  margin-bottom: var(--spacing-xl);
}

.feedback-section h3 {
  margin: 0 0 var(--spacing-lg) 0;
  color: var(--text-primary);
  font-size: var(--font-size-lg);
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding-bottom: var(--spacing-sm);
  border-bottom: var(--border-width) solid var(--border-color);
}

.feedback-list {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-base);
}

.feedback-item {
  background: var(--background-color);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-base);
  transition: all 0.2s ease;
}

.feedback-item:hover {
  box-shadow: var(--shadow);
}

.feedback-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: var(--spacing-sm);
  gap: var(--spacing-base);
}

.feedback-from,
.feedback-to {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
}

.from-name,
.to-name {
  font-weight: var(--font-weight-medium);
  color: var(--text-primary);
}

.feedback-meta {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: var(--spacing-xs);
}

.feedback-type {
  font-size: var(--font-size-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
}

.feedback-content {
  color: var(--text-primary);
  line-height: 1.6;
  margin-bottom: var(--spacing-sm);
}

.ai-enhanced-badge {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-xs);
  color: var(--primary-color);
  background: rgba(54, 99, 153, 0.1);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius);
  font-weight: var(--font-weight-medium);
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl);
  color: var(--text-muted);
  text-align: center;
}

.empty-state i {
  font-size: var(--font-size-2xl);
  margin-bottom: var(--spacing-base);
}

.empty-state p {
  margin: 0;
  font-size: var(--font-size-base);
}

.write-feedback-section {
  padding-top: var(--spacing-lg);
}

.feedback-form {
  background: var(--secondary-background);
  padding: var(--spacing-lg);
  border-radius: var(--border-radius);
}

.form-row {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-base);
  margin-bottom: var(--spacing-base);
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  width: 100%;
}

.form-group label {
  font-weight: var(--font-weight-medium);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  margin-bottom: var(--spacing-xs);
}

.form-control {
  width: 100%;
  padding: var(--spacing-sm);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  background: var(--background-color);
  color: var(--text-primary);
  transition: all 0.2s ease;
  box-sizing: border-box;
}

.form-control:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(54, 99, 153, 0.1);
}

.form-control.error {
  border-color: var(--error-color);
}

.field-error {
  color: var(--error-color);
  font-size: var(--font-size-xs);
  margin-top: var(--spacing-xs);
}

textarea.form-control {
  resize: vertical;
  min-height: 100px;
}

select.form-control {
  cursor: pointer;
}

.character-count {
  font-size: var(--font-size-xs);
  color: var(--text-muted);
  margin-top: var(--spacing-xs);
  text-align: right;
}

.form-actions {
  display: flex;
  justify-content: flex-start;
  margin-top: var(--spacing-lg);
}

.btn-primary {
  padding: var(--spacing-sm) var(--spacing-lg);
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  border: var(--border-width) solid transparent;
  background: var(--primary-color);
  color: var(--text-white);
}

.btn-primary:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(54, 99, 153, 0.3);
}

.btn-primary:disabled {
  background: var(--disabled-background);
  color: var(--disabled-color);
  border: var(--border-width) solid var(--border-color);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Feedback type styles */
.feedback-positive {
  border-left: 4px solid var(--success-color);
}

.feedback-positive .feedback-type {
  background: rgba(16, 185, 129, 0.1);
  color: var(--success-color);
}

.feedback-constructive {
  border-left: 4px solid var(--warning-color);
}

.feedback-constructive .feedback-type {
  background: rgba(245, 158, 11, 0.1);
  color: var(--warning-color);
}

.feedback-performance {
  border-left: 4px solid var(--primary-color);
}

.feedback-performance .feedback-type {
  background: rgba(54, 99, 153, 0.1);
  color: var(--primary-color);
}

.feedback-manager {
  border-left: 4px solid var(--role-manager);
}

.feedback-manager .feedback-type {
  background: rgba(195, 35, 86, 0.1);
  color: var(--role-manager);
}

.feedback-peer {
  border-left: 4px solid #8B5CF6;
}

.feedback-peer .feedback-type {
  background: rgba(139, 92, 246, 0.1);
  color: #8B5CF6;
}

.feedback-self {
  border-left: 4px solid #06B6D4;
}

.feedback-self .feedback-type {
  background: rgba(6, 182, 212, 0.1);
  color: #06B6D4;
}

.feedback-goal {
  border-left: 4px solid #84CC16;
}

.feedback-goal .feedback-type {
  background: rgba(132, 204, 22, 0.1);
  color: #84CC16;
}

.feedback-development {
  border-left: 4px solid #F59E0B;
}

.feedback-development .feedback-type {
  background: rgba(245, 158, 11, 0.1);
  color: #F59E0B;
}

.feedback-default {
  border-left: 4px solid var(--text-muted);
}

.feedback-default .feedback-type {
  background: rgba(156, 163, 175, 0.1);
  color: var(--text-muted);
}

/* Responsive design */
@media (max-width: 768px) {
  .dialog-overlay {
    padding: var(--spacing-sm);
  }
  
  .dialog-container {
    max-height: 95vh;
  }
  
  .dialog-header,
  .dialog-content {
    padding: var(--spacing-base);
  }
  
  .feedback-header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }
  
  .feedback-meta {
    align-items: flex-start;
  }
}

/* Loading animation */
.fa-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
